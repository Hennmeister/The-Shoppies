{"version":3,"sources":["banner.module.css","HelpMenu.module.css","Movie.module.css","movie-context.js","Input.js","Movie.js","MovieCarousel.js","Search.js","Banner.js","Nominations.js","HelpMenu.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","MovieContext","createContext","undefined","Provider","props","storedNominations","JSON","parse","localStorage","getItem","useState","movieContext","nominatedMovies","setNominatedMovies","value","children","Input","handleInputChange","e","onInputChanged","target","HandleKeyPress","a","key","sendQuery","TextField","label","id","onChange","input","style","width","onKeyPress","InputProps","startAdornment","InputAdornment","position","endAdornment","IconButton","aria-label","onClick","length","autoFocus","autoComplete","variant","Movie","ButtonBase","disableRipple","className","classes","movie","posterLink","poster","src","alt","info","Typography","paddingBottom","lineHeight","paddingTop","fontSize","title","showAll","year","Button","disabled","isNominationDisabled","color","nominationButton","btnText","MovieCarousel","carousel","titleText","movies","movieList","map","isMovieDisabled","onMovieClick","marginLeft","decrementScroll","height","incrementScroll","Search","React","searchTitle","updateSearchTitle","prevSearchTitle","updatePrevSearchTitle","searchResults","updateSearchResults","pageNumber","updatePageNumber","numResults","updateNumResults","selectedIndex","updateIndex","updateTitleText","useContext","sendSearchQuery","appendResults","axios","get","then","response","newMovieEntries","data","push","prev","Number","catch","error","console","log","slice","Math","min","max","some","nomination","imdbID","Banner","banner","Nominations","useEffect","setItem","stringify","newNominations","filter","nom","HelpMenu","container","toggleActive","theme","createMuiTheme","palette","type","primary","light","main","dark","secondary","App","showHelpMenu","updateShowHelpMenu","ThemeProvider","flexWrapper","helpButton","particles","params","number","size","line_linked","enable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.439c64e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner_banner__2MxOn\",\"button\":\"banner_button__1NHsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HelpMenu_container__2Iyba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel\":\"Movie_carousel__21yfX\",\"movie\":\"Movie_movie__1J78n\",\"info\":\"Movie_info__38JCk\",\"nominationButton\":\"Movie_nominationButton__2Wg9U\",\"poster\":\"Movie_poster__2rYhn\",\"label\":\"Movie_label__1fUSL\"};","import React, { createContext, useState } from 'react'\n\nexport const MovieContext = createContext(undefined)\n\nexport const Provider = (props) => {\n    const storedNominations = JSON.parse(localStorage.getItem('nominations'))\n    const [nominatedMovies, setNominatedMovies] = useState(\n        storedNominations ? storedNominations : []\n    )\n    const movieContext = {\n        nominatedMovies,\n        setNominatedMovies,\n    }\n\n    return (\n        <MovieContext.Provider value={movieContext}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n","import React from 'react'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TextField from '@material-ui/core/TextField'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport default function Input(props) {\n    const handleInputChange = (e) => {\n        props.onInputChanged(e.target.value)\n    }\n\n    const HandleKeyPress = async (e) => {\n        if (e.key === 'Enter') {\n            props.sendQuery()\n        }\n    }\n\n    return (\n        <div>\n            <TextField\n                label=\"Search for a Movie\"\n                id=\"outlined-start-adornment\"\n                onChange={handleInputChange}\n                value={props.input}\n                style={{ width: '25ch' }}\n                onKeyPress={HandleKeyPress}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <SearchIcon></SearchIcon>\n                        </InputAdornment>\n                    ),\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"delete input\"\n                                onClick={() =>\n                                    handleInputChange({ target: { value: '' } })\n                                }\n                            >\n                                {props.input.length > 0 ? <CloseIcon /> : null}\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                    autoFocus: true,\n                    autoComplete: 'off',\n                }}\n                variant=\"outlined\"\n            ></TextField>\n        </div>\n    )\n}\n","import React from 'react'\nimport classes from './Movie.module.css'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nexport default function Movie(props) {\n    return (\n        <ButtonBase disableRipple={true} className={classes.movie}>\n            {props.posterLink !== 'N/A' ? (\n                <img\n                    className={classes.poster}\n                    src={props.posterLink}\n                    alt=\"Movie Poster\"\n                />\n            ) : null}\n            <div className={classes.info}>\n                <Typography\n                    variant=\"h6\"\n                    style={{\n                        paddingBottom: '10px',\n                        lineHeight: 1.2,\n                        paddingTop: '4vh',\n                        fontSize: '4em',\n                    }}\n                >\n                    {props.title}\n                </Typography>\n                {!props.showAll ? (\n                    <Typography>{`Release Year: ${props.year}`}</Typography>\n                ) : null}\n                <Button\n                    disabled={props.isNominationDisabled}\n                    onClick={props.onClick}\n                    style={{ fontSize: 'inherit' }}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.nominationButton}\n                >\n                    {props.btnText}\n                </Button>\n            </div>\n        </ButtonBase>\n    )\n}\n","import React, { useContext } from 'react'\nimport { MovieContext } from './movie-context'\nimport classes from './Movie.module.css'\nimport Movie from './Movie'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\n\nexport default function MovieCarousel(props) {\n    let carousel = (\n        <Typography variant=\"h2\" color=\"textPrimary\">\n            {props.titleText}\n        </Typography>\n    )\n    if (props.movies.length > 0) {\n        const movieList = props.movies.map((movie) => (\n            <Movie\n                isNominationDisabled={props.isMovieDisabled(movie)}\n                title={movie['Title']}\n                year={movie['Year']}\n                posterLink={movie['Poster']}\n                key={movie['imdbID']}\n                onClick={() => props.onMovieClick(movie)}\n                btnText={props.btnText}\n                showAll={props.showAll}\n            />\n        ))\n        carousel = (\n            <>\n                <Typography\n                    color=\"textPrimary\"\n                    className={classes.label}\n                    variant=\"h5\"\n                    style={!props.showAll ? { marginLeft: '4vw' } : null}\n                >\n                    {props.label}\n                </Typography>\n                <div\n                    className={classes.carousel}\n                    style={\n                        props.showAll\n                            ? { width: '98vw', fontSize: '1em' }\n                            : null\n                    }\n                >\n                    {!props.showAll ? (\n                        <IconButton\n                            onClick={props.decrementScroll}\n                            color={'secondary'}\n                            style={{ height: '50%' }}\n                        >\n                            <NavigateBeforeIcon />\n                        </IconButton>\n                    ) : null}\n                    {movieList}{' '}\n                    {!props.showAll ? (\n                        <IconButton\n                            onClick={props.incrementScroll}\n                            color={'secondary'}\n                            style={{ height: '50%' }}\n                        >\n                            <NavigateNextIcon />\n                        </IconButton>\n                    ) : null}\n                </div>\n            </>\n        )\n    }\n    return carousel\n}\n","import React, { useContext } from 'react'\nimport { MovieContext } from './movie-context'\nimport Input from './Input'\nimport axios from 'axios'\nimport MovieCarousel from './MovieCarousel'\n\nexport default function Search() {\n    const [searchTitle, updateSearchTitle] = React.useState('')\n    const [prevSearchTitle, updatePrevSearchTitle] = React.useState('')\n    const [searchResults, updateSearchResults] = React.useState([])\n    const [pageNumber, updatePageNumber] = React.useState(1)\n    const [numResults, updateNumResults] = React.useState(0)\n    const [selectedIndex, updateIndex] = React.useState(0)\n    const [titleText, updateTitleText] = React.useState('')\n\n    const { nominatedMovies, setNominatedMovies } = useContext(MovieContext)\n\n    const incrementScrollPosition = () => {\n        updateIndex((prev) => Math.min(searchResults.length - 3, prev + 1))\n        if (searchResults.length - selectedIndex < 15) {\n            sendSearchQuery(true)\n        }\n    }\n\n    const decrementScrollPosition = () => {\n        updateIndex((prev) => Math.max(0, prev - 1))\n    }\n\n    const onMovieClick = (movie) => {\n        setNominatedMovies((prev) => [...prev, movie])\n    }\n\n    const sendSearchQuery = (appendResults) => {\n        if (numResults / 10 + 1 >= pageNumber) {\n            axios\n                .get(\n                    appendResults\n                        ? `http://www.omdbapi.com/?s=${prevSearchTitle}&type=movie&page=${pageNumber}&apikey=58992cd9`\n                        : `http://www.omdbapi.com/?s=${searchTitle}&type=movie&page=1&apikey=58992cd9`\n                )\n                .then((response) => {\n                    const newMovieEntries = []\n                    for (const key in response.data.Search) {\n                        newMovieEntries.push(response.data.Search[key])\n                    }\n                    if (appendResults) {\n                        updateSearchResults((prev) => [\n                            ...prev,\n                            ...newMovieEntries,\n                        ])\n                    } else {\n                        updateSearchResults((prev) => [...newMovieEntries])\n                        updateIndex(0)\n                        updatePrevSearchTitle(searchTitle)\n                        updatePageNumber(1)\n                    }\n                    updateNumResults(Number(response.data['totalResults']))\n                    updatePageNumber((prev) => prev + 1)\n                    if (searchResults.length === 0) {\n                        updateTitleText('No Results')\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n    }\n\n    const canNominateMovie = (movie) =>\n        nominatedMovies.some(\n            (nomination) => movie.imdbID === nomination.imdbID\n        ) || nominatedMovies.length >= 5\n\n    return (\n        <>\n            <div>\n                <MovieCarousel\n                    onMovieClick={onMovieClick}\n                    movies={searchResults.slice(\n                        selectedIndex,\n                        Math.min(selectedIndex + 3, searchResults.length)\n                    )}\n                    decrementScroll={decrementScrollPosition}\n                    incrementScroll={incrementScrollPosition}\n                    btnText={'NOMINATE'}\n                    isMovieDisabled={canNominateMovie}\n                    titleText={titleText}\n                    input={searchTitle}\n                    label={'Search Results'}\n                    showAll={false}\n                ></MovieCarousel>\n            </div>\n            <Input\n                input={searchTitle}\n                sendQuery={() => sendSearchQuery(false)}\n                onInputChanged={updateSearchTitle}\n            />\n        </>\n    )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport classes from './banner.module.css'\n\nexport default function Banner() {\n    return (\n        <div className={classes.banner}>\n            <Typography color=\"textSecondary\" variant={'subtitle2'}>\n                You've completed your nomination list! Feel free to continue\n                editing.\n            </Typography>\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { MovieContext } from './movie-context'\nimport MovieCarousel from './MovieCarousel'\nimport Banner from './Banner.js'\n\nexport default function Nominations(props) {\n    const { nominatedMovies, setNominatedMovies } = useContext(MovieContext)\n\n    useEffect(() => {\n        localStorage.setItem('nominations', JSON.stringify(nominatedMovies))\n    })\n\n    const HandleMoviePress = (movie) => {\n        const newNominations = nominatedMovies.filter(\n            (nom) => nom.imdbID !== movie.imdbID\n        )\n        setNominatedMovies(newNominations)\n    }\n    return (\n        <div>\n            <MovieCarousel\n                movies={nominatedMovies}\n                btnText={'Remove from Nominations'}\n                isMovieDisabled={() => false}\n                label={`Nominations (${nominatedMovies.length})`}\n                onMovieClick={HandleMoviePress}\n                showAll={true}\n            ></MovieCarousel>\n            {nominatedMovies.length === 5 ? <Banner /> : null}\n        </div>\n    )\n}\n","import { Button, Typography } from '@material-ui/core'\nimport React from 'react'\nimport classes from './HelpMenu.module.css'\n\nexport default function HelpMenu(props) {\n    return (\n        <div className={classes.container}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n                Welcome to the Shoppies!\n            </Typography>\n            <Typography variant=\"h6\" color=\"secondary\">\n                Search for movies and nominate up to 5 of your favourites.\n            </Typography>\n            <Button\n                onClick={() => props.toggleActive(false)}\n                color=\"secondary\"\n                variant=\"outlined\"\n            >\n                Got it!\n            </Button>\n        </div>\n    )\n}\n","import { useState } from 'react'\nimport Particles from 'react-particles-js'\nimport Search from './Search'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { Provider } from './movie-context'\nimport classes from './App.module.css'\nimport Nominations from './Nominations'\nimport HelpMenu from './HelpMenu'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#757ce8',\n            main: '#9b0000',\n            dark: '#002884',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#f44336',\n            dark: '#ba000d',\n        },\n    },\n})\n\nfunction App() {\n    const [showHelpMenu, updateShowHelpMenu] = useState(true)\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <header className={classes.flexWrapper}>\n                    {showHelpMenu ? (\n                        <HelpMenu toggleActive={updateShowHelpMenu} />\n                    ) : (\n                        <>\n                            <Provider>\n                                <Search />\n                                <Nominations />\n                            </Provider>\n                            <Button\n                                className={classes.helpButton}\n                                onClick={() => updateShowHelpMenu(true)}\n                                color=\"secondary\"\n                                variant=\"outlined\"\n                            >\n                                What am I doing again?\n                            </Button>\n                        </>\n                    )}\n                </header>\n                <Particles\n                    className={classes.particles}\n                    params={{\n                        particles: {\n                            number: {\n                                value: 25,\n                            },\n                            size: {\n                                value: 10,\n                            },\n                            line_linked: {\n                                enable: false,\n                            },\n                        },\n                    }}\n                />\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexWrapper\":\"App_flexWrapper__2R01j\",\"particles\":\"App_particles__klQeO\",\"helpButton\":\"App_helpButton__2mOSY\"};"],"sourceRoot":""}